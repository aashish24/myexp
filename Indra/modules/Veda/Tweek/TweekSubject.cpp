// This file is generated by omniidl (C++ backend)- omniORB_4_0. Do not edit.

#include "TweekSubject.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_0;



Veda::ITweek::TweekSubject_ptr Veda::ITweek::TweekSubject_Helper::_nil() {
  return ::Veda::ITweek::TweekSubject::_nil();
}

CORBA::Boolean Veda::ITweek::TweekSubject_Helper::is_nil(::Veda::ITweek::TweekSubject_ptr p) {
  return CORBA::is_nil(p);

}

void Veda::ITweek::TweekSubject_Helper::release(::Veda::ITweek::TweekSubject_ptr p) {
  CORBA::release(p);
}

void Veda::ITweek::TweekSubject_Helper::duplicate(::Veda::ITweek::TweekSubject_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void Veda::ITweek::TweekSubject_Helper::marshalObjRef(::Veda::ITweek::TweekSubject_ptr obj, cdrStream& s) {
  ::Veda::ITweek::TweekSubject::_marshalObjRef(obj, s);
}

Veda::ITweek::TweekSubject_ptr Veda::ITweek::TweekSubject_Helper::unmarshalObjRef(cdrStream& s) {
  return ::Veda::ITweek::TweekSubject::_unmarshalObjRef(s);
}

Veda::ITweek::TweekSubject_ptr
Veda::ITweek::TweekSubject::_duplicate(::Veda::ITweek::TweekSubject_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


Veda::ITweek::TweekSubject_ptr
Veda::ITweek::TweekSubject::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


Veda::ITweek::TweekSubject_ptr
Veda::ITweek::TweekSubject::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


Veda::ITweek::TweekSubject_ptr
Veda::ITweek::TweekSubject::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_TweekSubject _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_TweekSubject* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_TweekSubject;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* Veda::ITweek::TweekSubject::_PD_repoId = "IDL:Veda/ITweek/TweekSubject:1.0";


typedef tweek::Subject tweek_Subject;
typedef tweek::_impl_Subject tweek__impl_Subject;
typedef tweek::_objref_Subject tweek__objref_Subject;

Veda::ITweek::_objref_TweekSubject::~_objref_TweekSubject() {}


Veda::ITweek::_objref_TweekSubject::_objref_TweekSubject(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::Veda::ITweek::TweekSubject::_PD_repoId, ior, id, 1),
   tweek__objref_Subject(ior, id)
   
{
  _PR_setobj(this);
}

void*
Veda::ITweek::_objref_TweekSubject::_ptrToObjRef(const char* id)
{
  if( id == ::Veda::ITweek::TweekSubject::_PD_repoId )
    return (::Veda::ITweek::TweekSubject_ptr) this;
  if( id == ::tweek::Subject::_PD_repoId )
    return (::tweek::Subject_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::Veda::ITweek::TweekSubject::_PD_repoId) )
    return (::Veda::ITweek::TweekSubject_ptr) this;
  if( omni::strMatch(id, ::tweek::Subject::_PD_repoId) )
    return (::tweek::Subject_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cstring
class _0RL_cd_DA85C79F38D6E8E8_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_DA85C79F38D6E8E8_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::String_var arg_1_;
  const char* arg_1;
};

void _0RL_cd_DA85C79F38D6E8E8_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_DA85C79F38D6E8E8_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_DA85C79F38D6E8E8_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_DA85C79F38D6E8E8_00000000* tcd = (_0RL_cd_DA85C79F38D6E8E8_00000000*)cd;
  Veda::ITweek::_impl_TweekSubject* impl = (Veda::ITweek::_impl_TweekSubject*) svnt->_ptrToInterface(Veda::ITweek::TweekSubject::_PD_repoId);
  impl->setCommand(tcd->arg_0, tcd->arg_1);


}

void Veda::ITweek::_objref_TweekSubject::setCommand(const char* key, const char* value)
{
  _0RL_cd_DA85C79F38D6E8E8_00000000 _call_desc(_0RL_lcfn_DA85C79F38D6E8E8_10000000, "setCommand", 11);
  _call_desc.arg_0 = key;
  _call_desc.arg_1 = value;

  _invoke(_call_desc);



}
Veda::ITweek::_pof_TweekSubject::~_pof_TweekSubject() {}


omniObjRef*
Veda::ITweek::_pof_TweekSubject::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::Veda::ITweek::_objref_TweekSubject(ior, id);
}


CORBA::Boolean
Veda::ITweek::_pof_TweekSubject::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::Veda::ITweek::TweekSubject::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, tweek::Subject::_PD_repoId) )
    return 1;


  return 0;
}

const Veda::ITweek::_pof_TweekSubject _the_pof_Veda_mITweek_mTweekSubject;

Veda::ITweek::_impl_TweekSubject::~_impl_TweekSubject() {}


CORBA::Boolean
Veda::ITweek::_impl_TweekSubject::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setCommand") ) {

    _0RL_cd_DA85C79F38D6E8E8_00000000 _call_desc(_0RL_lcfn_DA85C79F38D6E8E8_10000000, "setCommand", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( tweek__impl_Subject::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((tweek__impl_Subject*)this)->
      tweek__impl_Subject::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
Veda::ITweek::_impl_TweekSubject::_ptrToInterface(const char* id)
{
  if( id == ::Veda::ITweek::TweekSubject::_PD_repoId )
    return (::Veda::ITweek::_impl_TweekSubject*) this;
  if( id == ::tweek::Subject::_PD_repoId )
    return (::tweek::_impl_Subject*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::Veda::ITweek::TweekSubject::_PD_repoId) )
    return (::Veda::ITweek::_impl_TweekSubject*) this;
  if( omni::strMatch(id, ::tweek::Subject::_PD_repoId) )
    return (::tweek::_impl_Subject*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
Veda::ITweek::_impl_TweekSubject::_mostDerivedRepoId()
{
  return ::Veda::ITweek::TweekSubject::_PD_repoId;
}

POA_Veda::ITweek::TweekSubject::~TweekSubject() {}

