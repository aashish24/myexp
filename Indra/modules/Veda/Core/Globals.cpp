
///////////////////////////////////////////////////////////////////////////////
//
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Created by: Aashish Chaudhary
//
///////////////////////////////////////////////////////////////////////////////

#include "Veda/Core/Globals.h"

namespace Veda
{
  namespace Core
  {
    ///////////////////////////////////////////////////////////////////////////////
    //
    // Constructor. 
    //
    ///////////////////////////////////////////////////////////////////////////////
    
    Display::Display() :
      mOriginX( 0 ), 
      mOriginY( 0 ), 
      mWidth( 0 ), 
      mHeight( 0 )
    {
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Constructor. 
    //
    ///////////////////////////////////////////////////////////////////////////////
    
    Display::~Display()
    {
    }
  

    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set dimensions for the display.
    //
    ///////////////////////////////////////////////////////////////////////////////

    void Display::setDisplay( int originx, int originy, int width, int height )
    {
      mOriginX = originx;
      mOriginY = originy;
      mWidth   = width;
      mHeight  = height;
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set width of the display.
    //
    ///////////////////////////////////////////////////////////////////////////////

    const int& Display::width() const
    {
      return mWidth;
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set height of the display.  
    //
    ///////////////////////////////////////////////////////////////////////////////

    const int& Display::height() const
    {
      return mHeight;
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set X of the origin for the display. 
    //
    ///////////////////////////////////////////////////////////////////////////////

    const int& Display::originX() const
    {
      return mOriginX;
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set Y of the origin for the display. 
    //
    ///////////////////////////////////////////////////////////////////////////////

    const int& Display::originY() const
    {
      return mOriginY;
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Destructor.
    //
    ///////////////////////////////////////////////////////////////////////////////

    RenderGlobals::~RenderGlobals()
    {
    }


    ///////////////////////////////////////////////////////////////////////////////
    //
    // Set display dimensions for the current rendering.
    //
    ///////////////////////////////////////////////////////////////////////////////

    void RenderGlobals::setDisplay( int originx, int originy, int width, int height )
    {
      mDisplay->setDisplay( originx, originy, width, height );
    }

    Display::RefPtr RenderGlobals::mDisplay = new Display();
  }
}

